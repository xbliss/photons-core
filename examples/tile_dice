#!/usr/bin/python -ci=__import__;o=i("os");s=i("sys");a=s.argv;p=o.path;y=p.join(p.dirname(a[1]),".python");o.execv(y,a)

from photons_app.actions import an_action

from photons_canvas import CanvasColor, Canvas, Rearranger, Coords
from photons_canvas.font import dice_8, put_characters_on_canvas
from photons_control.script import FromGenerator
from photons_messages import DeviceMessages

import logging

log = logging.getLogger("tile_dice")


@an_action(needs_target=True, special_reference=True)
async def tile_dice(collector, target, reference, **kwargs):
    """
    Display dice on your tiles

    ``tile_dice d073d5000001,d073d5000002``
    """

    def e(error):
        log.error(error)

    dice_color = CanvasColor(0, 0, 1, 3500)
    rearranger = Rearranger(coords_separate=True)
    characters = [dice_8[n] for n in ("1", "2", "3", "4", "5")]

    async def gen(reference, sender, **kwargs):
        plans = sender.make_plans("capability", "chain")
        async for serial, completed, info in sender.gatherer.gather_per_serial(
            plans, reference, **kwargs
        ):
            if not completed:
                continue

            if not info["capability"]["cap"].has_matrix:
                continue

            canvas = Canvas()

            # Put the numbers on the device
            coords = Coords()
            coords.rearranger = rearranger
            coords.add_device(serial, info["chain"]["chain"])

            put_characters_on_canvas(canvas, characters, coords, fill_color=dice_color)

            # Set bottom line to show which way up the dice are
            for coord in coords:
                for point in coord.points:
                    if coord.top_y - point[1] == coord.height - 1:
                        canvas[point] = CanvasColor(0, 1, 0.2, 3500)

            yield DeviceMessages.SetPower(level=65535, res_required=False, target=serial)
            yield canvas.messages_for(coords)[0]

    await target.send(FromGenerator(gen), reference, error_catcher=e)


if __name__ == "__main__":
    __import__("photons_core").run("lan:tile_dice {@:1:}")
